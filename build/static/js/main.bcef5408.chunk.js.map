{"version":3,"sources":["services/Requester.js","services/SiteService.js","pages/CreateSiteIndex.js","pages/Sites.js","components/NavBar.js","pages/SiteDetails.js","App.js","serviceWorker.js","index.js"],"names":["Requester","http","_this","this","Object","classCallCheck","interceptors","response","use","resp","reason","statusCodeInterceptor","listeners","url","config","get","token","defaults","headers","common","data","post","put","delete","status","handler","push","error","forEach","axios","create","baseURL","requester","SiteService","Resquester","id","concat","type","attributes","CreateSiteIndex","props","possibleConstructorReturn","getPrototypeOf","call","state","siteUrl","loading","handleChange","bind","assertThisInitialized","handleSubmit","createSite","handleKeyPress","save","event","urlRegex","test","target","value","setState","key","_this2","then","result","history","resource","catch","alert","override","css","_templateObject","react_default","a","createElement","style","position","height","width","display","ClipLoader_default","sizeUnit","size","color","className","href","data-size","data-show-count","aria-label","onChange","placeholder","onKeyPress","disabled","onClick","Component","Sites","NavBar","role","data-toggle","data-target","SiteDetails","site","included","tags","name","opened","getTags","toggleTag","match","params","getById","tag","filter","i","toLocaleLowerCase","toLowerCase","e","preventDefault","oldVal","find","item","_this3","components_NavBar","map","assign","length","content","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcef5408.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass Requester {\n  constructor(http) {\n    this.http = http;\n    this.http.interceptors.response.use((resp) => resp, (reason) => this.statusCodeInterceptor(reason));\n    this.listeners = {};\n  }\n\n  get(url, config) {\n    return this.http.get(url, config);\n  }\n\n  useToken(token) {\n    this.http.defaults.headers.common['Authorization'] = token;\n    return this;\n  }\n\n  post(url, data, config) {\n    return this.http.post(url, data, config);\n  }\n\n  put (url, data, config) {\n    return this.http.put(url, data || {}, config);\n  }\n\n  delete(url, config) {\n    return this.http.delete(url, config);\n  }\n\n  onResponseStatus (status, handler) {\n    if (!this.listeners[status]) {\n      this.listeners[status] = [];\n    }\n\n    this.listeners[status].push(handler);\n  }\n\n  statusCodeInterceptor (error) {\n    if (error.response) {\n      if (this.listeners[error.response.status]) {\n        this.listeners[error.response.status].forEach(handler => {\n          handler(error);\n        });\n      }\n    }\n  }\n}\n\nconst http = axios.create({\n  baseURL: 'https://site-indexer-api.herokuapp.com'\n  // baseURL: 'http://localhost:3000'\n});\n\nhttp.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\nhttp.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\nhttp.defaults.headers.common['Content-Type'] = 'application/vnd.api+json';\n\nconst requester = new Requester(http);\n\nexport default requester;\n","import Resquester from './Requester';\nconst SITES_PATH = '/sites';\n\nexport default class SiteService {\n    static getAll() {\n        return Resquester.get(SITES_PATH);\n    }\n\n    static getById(id) {\n        return Resquester.get( `${SITES_PATH}/${id}`);\n    }\n\n    static save(url) {\n        return Resquester.post(SITES_PATH, {data: {type:\"sites\", attributes:{url:url}}})\n    }\n\n}","import React, { Component } from 'react';\nimport SiteService from '../services/SiteService'\nimport { css } from '@emotion/core';\nimport PacManLoader from 'react-spinners/ClipLoader';\nimport urlRegex from 'url-regex'\n\nclass CreateSiteIndex extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            siteUrl: '',\n            loading: false,\n            error: false,\n    };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.createSite = this.createSite.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n    createSite() {\n        let {siteUrl} = this.state;\n        if(siteUrl[0] !== 'h') {\n            siteUrl = 'https://' + siteUrl;\n        }\n        return SiteService.save(siteUrl);\n    }\n\n    handleChange(event) {\n        urlRegex().test(event.target.value) ? this.setState({error: false}) : this.setState({error: true})\n        this.setState({siteUrl: event.target.value});\n    }\n\n    handleKeyPress(event) {\n        if (event.key === 'Enter') {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit() {\n        this.setState({loading: true});\n        this.createSite()\n            .then((result) => {\n                this.setState({loading: false})\n                this.props.history.push(`/details/${result.data.resource.id}`)\n            })\n            .catch(error => {\n                alert('Desculpe, nenhum resultado encontrado a partir da URL informada.')\n            });\n    }\n\n    render() {\n        const parentContainerStyles = {\n            position: 'fixed',\n            height: '100%',\n            width: '100%',\n            display: 'table'\n        };\n\n        const override = css`\n            position: absolute;\n            top: 40%;\n            left: 40%;\n            width: 100%;\n            height: 100%;\n            z-index: 10;\n            background-color: rgba(0,0,0,0.5);\n        `;\n\n        return (\n            <div style={parentContainerStyles}>\n                <PacManLoader\n                    css={override}\n                    sizeUnit={\"px\"}\n                    size={150}\n                    color={'#123abc'}\n                    loading={this.state.loading}\n                />\n                <div className=\"padding pull-right\">\n                    <a className=\"github-button margin-top\" href=\"https://github.com/nywton/site-index-ui\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star ntkme/github-buttons on GitHub\">Star</a>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"demo-headline\">\n                        <h1 className=\"demo-logo\">\n                            <div className=\"logo\"/>\n                            Site Indexer\n                            <small>Search tags</small>\n                        </h1>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-lg-10\">\n                            <div className={\"form-group\" + (this.state.error ? 'has-error' : '')}>\n                                <input type=\"text\" className=\"form-control\" id=\"search\" onChange={this.handleChange} value={this.state.value}\n                                       placeholder=\"Paste your URL...\" />\n                            </div>\n                        </div>\n                        <div className=\"col-lg-2\">\n                            <button onKeyPress={this.handleKeyPress} disabled={this.state.loading || (this.state.siteUrl === '')} type=\"button\" onClick={this.handleSubmit} className=\"btn btn-block btn-lg btn-primary\">Go!</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n\n}\n\nexport default CreateSiteIndex;","import React, { Component } from 'react';\n\nclass Sites extends Component {\n\n    render() {\n        const parentContainerStyles = {\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n            display: 'table'\n        };\n\n        return (\n            <div style={parentContainerStyles}>\n\n            </div>\n        );\n\n    }\n\n}\n\nexport default Sites;","import React, {Component} from 'react'\n\nclass NavBar extends Component {\n    render() {\n        return(<div className=\"navbar navbar-default navbar-static-top\" role=\"navigation\">\n            <div className=\"container\">\n                <div className=\"navbar-header\">\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\"\n                            data-target=\".navbar-collapse\">\n                        <span className=\"sr-only\">Toggle navigation</span>\n                    </button>\n                    <a className=\"navbar-brand\" href=\"/\">Site Indexer</a>\n                </div>\n                <div className=\"navbar-collapse collapse\">\n                    {/*<ul className=\"nav navbar-nav\">*/}\n                        {/*<li className=\"active\"><a href=\"#\">Sites</a></li>*/}\n                    {/*</ul>*/}\n                    <ul className=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a className=\"github-button padding\" href=\"https://github.com/nywton/site-index-ui\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star ntkme/github-buttons on GitHub\">Star</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>);\n    }\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport NavBar from '../components/NavBar'\nimport SiteService from '../services/SiteService'\nexport default class SiteDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            site: {included: []},\n            tags: [\n                {name: 'H1', opened: false },\n                {name: 'H2', opened: false },\n                {name: 'H3', opened: false },\n                {name: 'a', opened: false }\n                ],\n            loading: false\n        };\n        this.getTags = this.getTags.bind(this);\n        this.toggleTag = this.toggleTag.bind(this);\n    }\n\n    componentWillMount() {\n        const { id } = this.props.match.params;\n        SiteService.getById(id)\n            .then(result => {\n                this.setState({site: result.data});\n            })\n    }\n\n    getTags(tag) {\n\n        return this.state.site.included.filter(i => i.attributes.name.toLocaleLowerCase() === tag.name.toLowerCase())\n    }\n\n    toggleTag(e) {\n        const {tags} = this.state\n        e.preventDefault()\n        if(tags[e.target.id]) {\n            let oldVal = tags.find(item => item.name === (tags[e.target.id] || {}).name)\n            oldVal.opened = !oldVal.opened\n            this.setState({tags})\n        }\n    }\n\n\n    render() {\n        let { site } = this.state;\n        const parentContainerStyles = {\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n            display: 'table'\n        };\n\n        return (\n            <div style={parentContainerStyles}>\n                <NavBar/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div {...{ className: 'wrapper' }}>\n                            <ul {...{ className: 'accordion-list' }}>\n                                {this.state.tags.map((tag, key) => {\n                                    return (\n                                        <li {...{ className: 'accordion-list__item', key }}>\n                                            <div\n\n                                                onClick={(e) => this.toggleTag(e)}\n                                                {...{\n                                                    className: `accordion-item, ${tag.opened && 'accordion-item--opened'}`\n                                                }}\n                                            >\n                                                <div id={key} {...{ className: 'accordion-item__line' }}>\n                                                    <h3 {...{ className: 'accordion-item__title' }}>\n                                                        {tag.name === 'a' ? 'Links' : tag.name}: {this.getTags(tag).length}\n                                                    </h3>\n                                                    <span {...{ className: 'accordion-item__icon' }}/>\n                                                </div>\n                                                <div {...{ className: 'accordion-item__inner' }}>\n                                                    <div {...{ className: 'accordion-item__content' }}>\n                                                        {\n                                                            this.getTags(tag).map(tag => {\n                                                                return (\n                                                                    <p {...{ className: 'accordion-item__paragraph' }}>\n                                                                        {tag.attributes.content}\n                                                                    </p>\n                                                                );\n                                                            })\n                                                        }\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n\n}","import React, { Component } from 'react';\nimport './App.css';\nimport CreateSiteIndex from \"./pages/CreateSiteIndex\";\nimport Sites from \"./pages/Sites\";\nimport SiteDetails from \"./pages/SiteDetails\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Router>\n              {\n                  <Switch>\n                      <Route exact path=\"/\" component={CreateSiteIndex} />\n                      <Route  path=\"/sites\" component={Sites} />\n                      <Route path=\"/details/:id\" component={SiteDetails} />\n                  </Switch>\n              }\n          </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './vendor/flat-ui/dist/css/vendor/bootstrap.min.css';\nimport './vendor/flat-ui/dist/css/flat-ui.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}